# -*- coding: utf-8 -*-
"""seungwoo-fighting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iyVbuH5qzhfqCjFs2PGzXofX2UHLzf2e

## 한승우 졸업기원

그냥 여기에 해버리자. 내가 보기 편함.
나중에 이거 python 파일로 바꿔서 가져오는것도 가능.

일단 해야할거 알려줌.
1. 로컬(니 컴퓨터)에 강의에 나온 개발환경 세팅.(나중에 여기서 작성한 코드를 니 컴퓨터에서 돌려보기 위함)
2. 코드 따라하기는 여기서(데이터셋은 구해와서 여기에 업로드해놓을것)
  
  2-1. 왼쪽에 보면 작은 아이콘누르면 파일 업로드 가능한 메뉴 나옴.
3. 여기서 하다가 막히면 나한테 카톡
4. 목표로 한 그림(지도)이 부산쪽에서 나오면 로컬로 코드 가져가기
5. 로컬에서 돌려보고 html파일로 결과내기
6. 로컬에서 돌린 .py 파일 + .html파일 제출
7. 대충 어떻게 돌아가는건지 공부

  7-1. 이 프로젝트의 목적은 데이터 분석을 위한 전처리, 가공 및 시각화임.

  7-2. 향후 발전방향은 보다 더 풍부한 데이터와 분석방법(ex. 부동산 데이터, 매출데이터 등을 이용한 각 요소별 상관관계 분석) 이용해서 유의미한 매출을 낼 수 있는 입지를 추천해주는 시스템
8. 제출하고 발표 전까지 여기에 쓰인 데이터를 어떻게 가공했는지, 어떤 방법으로 시각화했고 왜 그렇게 했는지 설명할 수 있을 정도로 공부
### 9. **한승우 졸업**
"""

from google.colab import drive
drive.mount('/content/gdrive')

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import sys
sys.path.append('/content/상가업소정보_201912_01.csv')
# 구버전의 주피터 노트북에서 그래프가 보이는 설정
# %matplotlib inline

plt.rc("font", family="Malgun Gothic")
plt.rc("axes", unicode_minus=False)

from IPython.display import set_matplotlib_formats

set_matplotlib_formats("retina")

plt.title("한글폰트 설정")
plt.plot([-4, -6, 1, 2, 0, 3])

df = pd.read_csv("/content/상가업소정보_201912_01.csv", sep='|')
df.head()

df.shape

columns = ['상호명', '상권업종대분류명', '상권업종중분류명', '상권업종소분류명', 
           '시도명', '시군구명', '행정동명', '법정동명', '도로명주소', 
           '경도', '위도']
print(df.shape)
df = df[columns].copy()
df.shape

df.info()

df_busan = df[df["시도명"] == "부산광역시"].copy()  
print(df_busan.shape)
df_busan.head()

df_busan["시군구명"].unique()

df_busan.to_csv("busan_open_store.csv", index=False)

pd.read_csv("busan_open_store.csv").head()

# 결측치 제거
df_busan_without_na = df_busan[df_busan["상호명"].notna() == True]

df_busan_without_na["상호명_소문자"] = df_busan_without_na["상호명"].str.lower()
df_busan_without_na

df_busan_without_na[df_busan_without_na["상호명_소문자"].str.contains("베스킨라빈스|baskinrobbins")]

df_busan_without_na.loc[df_busan_without_na["상호명_소문자"].str.contains("배스킨라빈스|베스킨라빈스|baskinrobbins"), 
             "상호명_소문자"].shape

df_busan_without_na.loc[df_busan_without_na["상호명_소문자"].str.contains("던킨|dunkin"),
             "상호명_소문자"].shape

df_busan_without_na[df_busan_without_na["상호명_소문자"].str.contains("배스킨라빈스|베스킨라빈스|baskinrobbins|던킨|dunkin")]

df_31 = df_busan_without_na[df_busan_without_na["상호명_소문자"].str.contains(
    '배스킨라빈스|베스킨라빈스|baskinrobbins|던킨|dunkin')].copy()
df_31.shape

df_31.loc[df_31["상호명_소문자"].str.contains("배스킨라빈스|베스킨라빈스|baskinrobbins"), 
          "브랜드명"] = "배스킨라빈스"
df_31[["상호명", "브랜드명"]].head()

df_31["브랜드명"]= df_31["브랜드명"].fillna("던킨도너츠")
df_31["브랜드명"]

df_31["상권업종대분류명"].value_counts()

df_31[df_31["상권업종대분류명"].isin(["생활서비스"])]

df_31 = df_31[~df_31["상권업종대분류명"].isin(["소매", "생활서비스"])].copy()
df_31.shape

df_31

brand_count = df_31["브랜드명"].value_counts()
brand_count

df_31["브랜드명"].value_counts(normalize=True).plot.barh()

brand_count.index

plt.figure(figsize=(15, 4))
g = sns.countplot(data=df_31, x="시군구명", hue="브랜드명")

sns.scatterplot(data=df_31, x="경도", y="위도", hue="브랜드명")

import folium

lat = df_31["위도"].mean()
long = df_31["경도"].mean()
lat, long

df_31.sample()

m = folium.Map([lat, long])

#샘플하나해보
folium.Marker(
    [35.064257, 128.979805], 
    
    tooltip="배스킨라빈스").add_to(m)
m.save('index.html')
m

df_31.index

m = folium.Map([lat, long], zoom_start=12)

for i in df_31.index:
    
    sub_lat = df_31.loc[i, "위도"]
    sub_long = df_31.loc[i, "경도"]
    title = df_31.loc[i, "상호명"] + " - " + df_31.loc[i, "도로명주소"]
    
    icon_color = "blue"
    if df_31.loc[i, "브랜드명"] == "던킨도너츠":
        icon_color = "red"
    
    folium.Marker(
        [sub_lat, sub_long], 
        icon=folium.Icon(color=icon_color),
        popup=f'<i>{title}</i>', 
        tooltip=title).add_to(m)

m.save('index.html')
m

from folium.plugins import MarkerCluster

m = folium.Map([lat, long], zoom_start=12)
marker_cluster = MarkerCluster().add_to(m)

for i in df_31.index:
    
    sub_lat = df_31.loc[i, "위도"]
    sub_long = df_31.loc[i, "경도"]
    title = df_31.loc[i, "상호명"] + " - " + df_31.loc[i, "도로명주소"]
    
    icon_color = "blue"
    if df_31.loc[i, "브랜드명"] == "던킨도너츠":
        icon_color = "red"
    
    folium.Marker(
        [sub_lat, sub_long], 
        icon=folium.Icon(color=icon_color),
        popup=f'<i>{title}</i>', 
        tooltip=title).add_to(marker_cluster)

m.save('index.html')
m

df_busan["상호명"].str.contains("뚜레")

